/**
 * Pizza Shop API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SimpleAllOf from './SimpleAllOf';

/**
 * The Simple model module.
 * @module model/Simple
 * @version 1.0
 */
class Simple {
    /**
     * Constructs a new <code>Simple</code>.
     * @alias module:model/Simple
     * @implements module:model/SimpleAllOf
     */
    constructor() { 
        SimpleAllOf.initialize(this);
        Simple.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Simple</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Simple} obj Optional instance to populate.
     * @return {module:model/Simple} The populated <code>Simple</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Simple();
            SimpleAllOf.constructFromObject(data, obj);

            if (data.hasOwnProperty('productId')) {
                obj['productId'] = ApiClient.convertToType(data['productId'], 'Number');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('categoryId')) {
                obj['categoryId'] = ApiClient.convertToType(data['categoryId'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} productId
 */
Simple.prototype['productId'] = undefined;

/**
 * @member {Number} price
 */
Simple.prototype['price'] = undefined;

/**
 * @member {Number} categoryId
 */
Simple.prototype['categoryId'] = undefined;


// Implement SimpleAllOf interface:
/**
 * @member {Number} productId
 */
SimpleAllOf.prototype['productId'] = undefined;
/**
 * @member {Number} price
 */
SimpleAllOf.prototype['price'] = undefined;
/**
 * @member {Number} categoryId
 */
SimpleAllOf.prototype['categoryId'] = undefined;




export default Simple;

