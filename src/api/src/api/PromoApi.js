/**
 * Pizza Shop API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetPromotionsResponse from '../model/GetPromotionsResponse';
import PromoOfferDataResponse from '../model/PromoOfferDataResponse';
import PromoOffersRequest from '../model/PromoOffersRequest';

/**
* Promo service.
* @module api/PromoApi
* @version 1.0
*/
export default class PromoApi {

    /**
    * Constructs a new PromoApi.
    * @alias module:api/PromoApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * @param {Object} opts Optional parameters
     * @param {Number} opts.cityId
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/GetPromotionsResponse} and HTTP response
     */
    getPromotionsWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'cityId': opts['cityId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = GetPromotionsResponse;
      return this.apiClient.callApi(
        '/v1/promo', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} opts.cityId
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/GetPromotionsResponse}
     */
    getPromotions(opts) {
      return this.getPromotionsWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * @param {module:model/PromoOffersRequest} PromoOffersRequest
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/PromoOfferDataResponse} and HTTP response
     */
    offersWithHttpInfo(PromoOffersRequest) {
      let postBody = PromoOffersRequest;
      // verify the required parameter 'PromoOffersRequest' is set
      if (PromoOffersRequest === undefined || PromoOffersRequest === null) {
        throw new Error("Missing the required parameter 'PromoOffersRequest' when calling offers");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = PromoOfferDataResponse;
      return this.apiClient.callApi(
        '/v1/promo/offers', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * @param {module:model/PromoOffersRequest} PromoOffersRequest
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/PromoOfferDataResponse}
     */
    offers(PromoOffersRequest) {
      return this.offersWithHttpInfo(PromoOffersRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
